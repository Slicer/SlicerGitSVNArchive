
set(configure_cflags)
#
# To fix compilation problem: relocation R_X86_64_32 against `a local symbol' can not be
# used when making a shared object; recompile with -fPIC
# See http://www.cmake.org/pipermail/cmake/2007-May/014350.html
#
if( CMAKE_SYSTEM_PROCESSOR STREQUAL "x86_64" )
  set(configure_cflags "-fPIC")
endif()

# it seems that you need to run configure in the unix directory
# and not from the parent directory relatively i.e. sh /unix/configure
# use this step so we can set the WORKING_DIRECTORY appropriately

set(ENV{CC} @CMAKE_C_COMPILER@)
set(ENV{CXX} @CMAKE_CXX_COMPILER@)

if(APPLE)
  set(CMAKE_OSX_ARCHITECTURES "@CMAKE_OSX_ARCHITECTURES@")
  set(osx_arch_flags)
  foreach(arch ${CMAKE_OSX_ARCHITECTURES})
    set(osx_arch_flags "${osx_arch_flags} -arch ${arch}")
  endforeach()
  set(osx_version_flag "-mmacosx-version-min=@CMAKE_OSX_DEPLOYMENT_TARGET@")
  set(osx_sysroot)
  set(CMAKE_CXX_HAS_ISYSROOT "@CMAKE_CXX_HAS_ISYSROOT@")
  if(CMAKE_CXX_HAS_ISYSROOT)
    set(osx_sysroot "-isysroot @CMAKE_OSX_SYSROOT@")
  endif()
  set(osx_flags "${osx_arch_flags} ${osx_version_flag} ${osx_sysroot}")

  set(ENV{CFLAGS} "${osx_flags} $ENV{CFLAGS}")
  set(ENV{CXXFLAGS} "${osx_flags} $ENV{CXXFLAGS}")
  set(ENV{CPPFLAGS} "${osx_flags} $ENV{CPPFLAGS}")
  set(ENV{LDFLAGS} "${osx_flags} $ENV{LDFLAGS}")

  execute_process(
    COMMAND sh configure --with-tcl=@tcl_build@/lib --prefix=@tcl_build@ --disable-corefoundation --x-libraries=/usr/X11R6/lib --x-includes=/usr/X11R6/include --with-x --with-cflags=${configure_cflags}
    WORKING_DIRECTORY @tcl_base@/tk/unix
  )

else()

  execute_process(
    COMMAND sh configure --with-tcl=@tcl_build@/lib --prefix=@tcl_build@  --with-cflags=${configure_cflags}
    WORKING_DIRECTORY @tcl_base@/tk/unix
  )

endif()

