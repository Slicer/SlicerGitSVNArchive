set(ENV{CC} "@CMAKE_C_COMPILER@ @CMAKE_C_COMPILER_ARG1@")
set(ENV{CFLAGS} "@CMAKE_C_FLAGS@ @CMAKE_C_FLAGS_RELEASE@")
set(ENV{CXX} "@CMAKE_CXX_COMPILER@ @CMAKE_CXX_COMPILER_ARG1@")
set(ENV{CXXFLAGS} "@CMAKE_CXX_FLAGS@ @CMAKE_CXX_FLAGS_RELEASE@")
set(ENV{LDFLAGS} "@CMAKE_LINKER_FLAGS@ @CMAKE_LINKER_FLAGS_RELEASE@")

set(tcl_build "@tcl_build@")

if(APPLE)
  set(cmd ./configure --with-tcl=${tcl_build}/lib --with-tk=${tcl_build}/lib --prefix=${tcl_build})

  set(CMAKE_OSX_ARCHITECTURES "@CMAKE_OSX_ARCHITECTURES@")
  set(osx_arch_flags)
  foreach(arch ${CMAKE_OSX_ARCHITECTURES})
    set(osx_arch_flags "${osx_arch_flags} -arch ${arch}")
  endforeach()
  set(osx_version_flag "-mmacosx-version-min=@CMAKE_OSX_DEPLOYMENT_TARGET@")
  set(osx_sysroot)
  set(CMAKE_CXX_HAS_ISYSROOT "@CMAKE_CXX_HAS_ISYSROOT@")
  if(CMAKE_CXX_HAS_ISYSROOT)
    set(osx_sysroot "-isysroot @CMAKE_OSX_SYSROOT@")
  endif()
  set(osx_flags "${osx_arch_flags} ${osx_version_flag} ${osx_sysroot}")

  set(ENV{CFLAGS} "${osx_flags} $ENV{CFLAGS}")
  set(ENV{CXXFLAGS} "${osx_flags} $ENV{CXXFLAGS}")
  set(ENV{CPPFLAGS} "${osx_flags} $ENV{CPPFLAGS}")
  set(ENV{LDFLAGS} "${osx_flags} $ENV{LDFLAGS}")
else()
  set(cmd sh configure --with-tcl=${tcl_build}/lib --with-tk=${tcl_build}/lib --prefix=${tcl_build})
endif()

execute_process(
  COMMAND ${cmd}
)
