set(ENV{CC} "@CMAKE_C_COMPILER@ @CMAKE_C_COMPILER_ARG1@")
set(ENV{CFLAGS} "@CMAKE_C_FLAGS@ @CMAKE_C_FLAGS_RELEASE@")
set(ENV{CXX} "@CMAKE_CXX_COMPILER@ @CMAKE_CXX_COMPILER_ARG1@")
set(ENV{CXXFLAGS} "@CMAKE_CXX_FLAGS@ @CMAKE_CXX_FLAGS_RELEASE@")
set(ENV{LDFLAGS} "@CMAKE_LINKER_FLAGS@ @CMAKE_LINKER_FLAGS_RELEASE@")

if(UNIX)
  set(LDFLAGS)
  set(CPPFLAGS)
  set(LD_LIBRARY_PATH "@CMAKE_CURRENT_BINARY_DIR@/python-build/lib")

  set(Slicer_USE_PYTHONQT_WITH_TCL "@Slicer_USE_PYTHONQT_WITH_TCL@")
  if(Slicer_USE_PYTHONQT_WITH_TCL)
    set(LD_LIBRARY_PATH "@CMAKE_CURRENT_BINARY_DIR@/tcl-build/lib:${LD_LIBRARY_PATH}")
    set(LDFLAGS "-L@CMAKE_CURRENT_BINARY_DIR@/tcl-build/lib")
    set(CPPFLAGS "-I@CMAKE_CURRENT_BINARY_DIR@/tcl-build/include")
  endif()

  if(APPLE)
    set(CMAKE_OSX_ARCHITECTURES "@CMAKE_OSX_ARCHITECTURES@")
    if("${CMAKE_OSX_ARCHITECTURES}" STREQUAL "")
      message(FATAL_ERROR "error: CMAKE_OSX_ARCHITECTURES should be specified.")
    endif()
    list(LENGTH CMAKE_OSX_ARCHITECTURES arch_count)
    if(arch_count GREATER 1)
      message(FATAL_ERROR "error: Only one value should be associated with CMAKE_OSX_ARCHITECTURES.")
    endif()

    set(CMAKE_OSX_SYSROOT @CMAKE_OSX_SYSROOT@)
    if(NOT EXISTS "${CMAKE_OSX_SYSROOT}")
      message(FATAL_ERROR "error: CMAKE_OSX_SYSROOT should point to an existing directory.")
    endif()

    set(osx_arch_flags -arch ${CMAKE_OSX_ARCHITECTURES})
    set(osx_version_flag "-mmacosx-version-min=@CMAKE_OSX_DEPLOYMENT_TARGET@")
    set(osx_sysroot "-isysroot @CMAKE_OSX_SYSROOT@")
    set(osx_flags "${osx_arch_flags} ${osx_version_flag} ${osx_sysroot}")

    set(CFLAGS "${CFLAGS} ${osx_flags}")
    set(CXXFLAGS "${CXXFLAGS} ${osx_flags}")
    set(CPPFLAGS "${CPPFLAGS} ${osx_flags}")
    set(LDFLAGS "${LDFLAGS} ${osx_flags}")
    # http://bugs.python.org/issue11334 indicates that dynamic_lookup causes build issues, confirmed on 10.7.4
    #set(LDFLAGS "${LDFLAGS} -undefined dynamic_lookup")
  endif(APPLE)

  foreach(v CFLAGS CXXFLAGS CPPFLAGS LDFLAGS LD_LIBRARY_PATH)
    set(ENV{${v}} ${${v}})
  endforeach()


  set(extra_make_flags)
  # Warning: To avoid error on macosx, let's disable parallel build using '-j1'
  if(APPLE)
    set(extra_make_flags -j1)
  endif()
  execute_process(
    COMMAND make install ${extra_make_flags}
    WORKING_DIRECTORY "@python_base@"
    )

  execute_process(
    COMMAND @CMAKE_CURRENT_BINARY_DIR@/python-build/bin/python setup.py install
    WORKING_DIRECTORY "@python_base@"
    )

endif()
