# Provide a version of 'pythonrun.c' with PyRun_OpenFile() and
# PyRun_CloseFile().
# This is necessary on Windows, as python might be compiled in release mode
# while Slicer is in debug. As python takes a FILE* as function parameter
# like PyRun_File, the FILE* needs to be created with the same STD lib.
# Mixing modes (debug or release) might lead to crashes
configure_file(
  "@CMAKE_CURRENT_SOURCE_DIR@/SuperBuild/pythonrun.c.in"
  "@python_SOURCE_DIR@/Python/pythonrun.c"
  COPY)
configure_file(
  "@CMAKE_CURRENT_SOURCE_DIR@/SuperBuild/pythonrun.h.in"
  "@python_SOURCE_DIR@/Include/pythonrun.h"
  COPY)

# Allow pyd files to be build with embedded manifests that point to msvc runtime dll
# This allows a debug build of slicer to import numpy.pyd that is built in release mode.
# Based on viewvc.slicer.org/viewvc.cgi/Slicer3-lib-mirrors/trunk/Python-2.6.6/Lib/distutils/msvc9compiler.py?view=co&pathrev=163
# See python bug http://bugs.python.org/issue7833 and discussion for more details
configure_file(
  "@CMAKE_CURRENT_SOURCE_DIR@/SuperBuild/python_distutils_msvc9compiler.py.in"
  "@python_SOURCE_DIR@/Lib/distutils/msvc9compiler.py"
  COPY)

# Prevent warning about if(ON).
cmake_policy(SET CMP0012 NEW)
if(@${PROJECT_NAME}_USE_PYTHONQT_WITH_TCL@)
  # 32-bit or 64-bit
  if(@CMAKE_SIZEOF_VOID_P@ EQUAL 8)
    execute_process(COMMAND ${CMAKE_COMMAND} -Din:FILEPATH=@in@ -Dout:FILEPATH=@out@ -Dfind=\\tcltk64 -Dreplace=\\tcl-build -P "@script@")
    # on Win64 we use tcl 8.5
    execute_process(COMMAND ${CMAKE_COMMAND} -Din:FILEPATH=@in@ -Dout:FILEPATH=@out@ -Dfind=84 -Dreplace=85 -P "@script@")
  else()
    execute_process(COMMAND ${CMAKE_COMMAND} -Din:FILEPATH=@in@ -Dout:FILEPATH=@out@ -Dfind=\\tcltk -Dreplace=\\tcl-build -P "@script@")
    # on Win32 we use tcl 8.4
    execute_process(COMMAND ${CMAKE_COMMAND} -Din:FILEPATH=@in@ -Dout:FILEPATH=@out@ -Dfind=85 -Dreplace=84 -P "@script@")
  endif()
endif()
